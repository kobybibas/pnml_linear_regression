model_degree: 8
x_test_max: 1.0
x_test_min: 0
dx_test: 0.01
x_train: [0.055, 0.105, 0.212, 0.271, 0.485, 0.523, 0.755, 0.88]
y_train: [0.4, 0.2, 0.6, 0.55, 0.18, 0.2, 0.3, 0.2]
data_type: fourier
lamb: 0

# Machine params
is_local_mode: false  # Whether to use ray debug mode: using only 1 cpu.
num_cpus: -1          # Number of cpu to use. Set -1 to use all available cpus.

pnml_optim_param:
  is_one_sided_interval: True     # pNML distribution is symmetric, eval only one side to accelerate
  var: 1e-3                       # Is used as default if not zero, otherwise use the ERM var
  y_interval_min: 1e-12           # The default maximum y to eval
  y_interval_max: 1e6             # The default minimum y to eval
  y_interval_num: 1024            # Number of y to eval in the pNML procedure
  x_bot_threshold: 1e-3           # Min valid value of |x_\bot|^2/|x|^2 to not considered as 0.
  skip_pnml_optimize_var: True    # Whether to find the best pNML val on validation set.
  # Params for overparam pNML optimization
  pnml_lambda_optim_param:
    tol_func: 1e-3                # Allowed ratio to norm: |norm-norm_constraint|/norm_constraint
    max_iter: 1e3                 # Maximum iteration of lambda optimization
  pnml_var_optim_param:
    sigma_interval_min: 1e-2      # Initial guess \sigma min interval. Notice this is \sigma and not sigma^2.
    sigma_interval_max: 10        # Initial guess \sigma max interval.
    sigma_interval_steps: 50      # Number of initial guesses to evaluate.

hydra:
  run:
    # Output directory
    dir: ../output/pnml_fourier_${model_degree}_${now:%Y%m%d_%H%m%S}
  sweep:
    dir: ../output/
    subdir: pnml_fourier_${model_degree}_${now:%Y%m%d_%H%m%S}_${hydra.job.num}